{"version":3,"file":"static/js/3.9fa0e02b.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.jsx","components/pages/ComicsPage.jsx"],"sourcesContent":["import './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport { useEffect, useState} from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport { Link } from 'react-router-dom';\n\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [comicsEnded, setComicsEnded] = useState(false);\n    const [offset, setOffset] = useState(0);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n    \n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if(newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n\n    }\n\n    function renderItems (arr)  {\n        const items =  arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i} item=\"comic\">\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n        \n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    \n    return (\n        <div className=\"comics__list\" item=\"comic\">\n                    {\n                        setContent(process, () => renderItems(comicsList), newItemLoading)\n                    }\n            <button className=\"button button__main button__long\"\n                        disabled={newItemLoading}\n                        style={{'display': comicsEnded ? 'none' : 'block'}}\n                        onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with comics list\"\r\n                    />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","comicsEnded","setComicsEnded","_useState7","_useState8","offset","setOffset","_useMarvelService","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","_jsxs","className","item","children","arr","items","map","i","Link","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList"],"sourceRoot":""}